using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Data.Entity;

namespace Entity_Framework_Data
{
    public partial class Form1 : DevExpress.XtraEditors.XtraForm
    {
        DBContext dbContext;
        public Form1()
        {
            InitializeComponent();

            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            //dbContext = new DBContext();
            // Call the Load method to get the data for the given DbSet from the database.
            //dbContext.DimProducts.Load();
            // This line of code is generated by Data Source Configuration Wizard
            //dimProductsBindingSource.DataSource = dbContext.DimProducts.Local.ToBindingList();

            // This line of code is generated by Data Source Configuration Wizard
            //entityServerModeSource1.QueryableSource = new DBContext().DimProducts;
            //dbContext.Database.Initialize(true);
            // This line of code is generated by Data Source Configuration Wizard
            this.entityInstantFeedbackSource1.GetQueryable += entityInstantFeedbackSource1_GetQueryable;
            // This line of code is generated by Data Source Configuration Wizard
            this.entityInstantFeedbackSource1.DismissQueryable += entityInstantFeedbackSource1_DismissQueryable;
            // This line of code is generated by Data Source Configuration Wizard
            this.entityInstantFeedbackSource2.GetQueryable += entityInstantFeedbackSource2_GetQueryable;
            // This line of code is generated by Data Source Configuration Wizard
            this.entityInstantFeedbackSource2.DismissQueryable += entityInstantFeedbackSource2_DismissQueryable;
        }

        private void gridView1_RowUpdated(object sender, DevExpress.XtraGrid.Views.Base.RowObjectEventArgs e)
        {
            dbContext.SaveChanges();
        }

        // This event is generated by Data Source Configuration Wizard
        void entityInstantFeedbackSource1_GetQueryable(object sender, DevExpress.Data.Linq.GetQueryableEventArgs e)
        {

            // Instantiate a new DataContext
            Entity_Framework_Data.DBContext dataContext = new Entity_Framework_Data.DBContext();
            // Assign a queryable source to the EntityInstantFeedbackSource
            e.QueryableSource = dataContext.DimProducts;
            // Assign the DataContext to the Tag property,
            // to dispose of it in the DismissQueryable event handler
            e.Tag = dataContext;
        }

        // This event is generated by Data Source Configuration Wizard
        void entityInstantFeedbackSource1_DismissQueryable(object sender, DevExpress.Data.Linq.GetQueryableEventArgs e)
        {

            // Dispose of the DataContext
            ((Entity_Framework_Data.DBContext)e.Tag).Dispose();
        }

        // This event is generated by Data Source Configuration Wizard
        void entityInstantFeedbackSource2_GetQueryable(object sender, DevExpress.Data.Linq.GetQueryableEventArgs e)
        {

            // Instantiate a new DataContext
            Entity_Framework_Data.DBContext dataContext = new Entity_Framework_Data.DBContext();
            // Assign a queryable source to the EntityInstantFeedbackSource
            e.QueryableSource = dataContext.DimProducts;
            // Assign the DataContext to the Tag property,
            // to dispose of it in the DismissQueryable event handler
            e.Tag = dataContext;
        }

        // This event is generated by Data Source Configuration Wizard
        void entityInstantFeedbackSource2_DismissQueryable(object sender, DevExpress.Data.Linq.GetQueryableEventArgs e)
        {

            // Dispose of the DataContext
            ((Entity_Framework_Data.DBContext)e.Tag).Dispose();
        }

        private void gridControl1_Click(object sender, EventArgs e)
        {

        }
    }
}
